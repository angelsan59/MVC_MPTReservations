/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ihmMPT;

import java.util.List;
import java.util.Observable;
import metier.Adherent;
import metier.ResaController;
import metier.Representation;
import metier.Reservation;


/**
 * Fenêtre de l'application
 * @author sociepka
 */
public class IHMReservations extends javax.swing.JFrame  implements java.util.Observer {
     // Création du controlleur
    private ResaController controller=new ResaController();
     
   /**
    * Constructeur avec des arguments ajoutés pour créer la fenêtre à partir de la classe "Principale"
    * Crée les listes combobox Adherents et réservations
    * @param parent : déclaration de la fenêtre parent à ouvrir
    * @param modal true ou false
    */
    public IHMReservations(java.awt.Frame parent, boolean modal) {
        initComponents();
        
        // Construction de la liste des Adhérents
        List<Adherent> adh=controller.getAdherents();
        for (Adherent a:adh)
        {
         listAdherent.addItem(a.getNomAdherent()+ " "+a.getPrenomAdherent());
         int id = a.getNumAdherent();
         }
        
        // Construction de la liste des représentations
        List<Representation> rep=controller.getRepresentations();
        for (Representation r:rep)
        {
         listRepresentation.addItem(r.getDateRepresentation()+" "+r.getNomSpectacle());
        int idr = r.getNumRepresentation();
         }
        
        /**
        * Commande pour centrer la fenêtre dans l'écran
        */
        setLocationRelativeTo(null);
    }
public IHMReservations() {
        initComponents();
   
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listRepresentation = new javax.swing.JComboBox<>();
        lAdherent = new javax.swing.JLabel();
        lRepresentation = new javax.swing.JLabel();
        lNombrepersonnes = new javax.swing.JLabel();
        lTotal = new javax.swing.JLabel();
        listAdherent = new javax.swing.JComboBox<>();
        champNombrePers = new javax.swing.JTextField();
        champTotal = new javax.swing.JTextField();
        btValider = new javax.swing.JButton();
        btAnnuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nouvelle réservation");

        listRepresentation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listRepresentationActionPerformed(evt);
            }
        });

        lAdherent.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lAdherent.setText("Adhérent :");

        lRepresentation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lRepresentation.setText("Représentation :");

        lNombrepersonnes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lNombrepersonnes.setText("Nombre de personnes :");

        lTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lTotal.setText("Total :");

        champNombrePers.setColumns(20);
        champNombrePers.setText("1");
        champNombrePers.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                champNombrePersFocusLost(evt);
            }
        });
        champNombrePers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champNombrePersActionPerformed(evt);
            }
        });

        champTotal.setColumns(20);
        champTotal.setText("0");

        btValider.setText("Valider");
        btValider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btValiderMouseClicked(evt);
            }
        });
        btValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btValiderActionPerformed(evt);
            }
        });

        btAnnuler.setText("Quitter");
        btAnnuler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAnnulerMouseClicked(evt);
            }
        });
        btAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnnulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lNombrepersonnes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(champNombrePers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lTotal)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(btValider, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 93, Short.MAX_VALUE)
                                .addComponent(champTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lAdherent)
                            .addComponent(lRepresentation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(listRepresentation, 0, 207, Short.MAX_VALUE)
                            .addComponent(listAdherent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAdherent)
                    .addComponent(listAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lRepresentation)
                    .addComponent(listRepresentation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNombrepersonnes)
                    .addComponent(champNombrePers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTotal)
                    .addComponent(champTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btValider)
                    .addComponent(btAnnuler))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listRepresentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listRepresentationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listRepresentationActionPerformed

    private void btValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btValiderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btValiderActionPerformed

    private void btAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnnulerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btAnnulerActionPerformed

    private void btValiderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btValiderMouseClicked
        Reservation resa=new Reservation();

        // récupération du numadherent
        resa.setNumadherent(listAdherent.getSelectedIndex()+1);
        
        // récupération du numrepresentation
       resa.setNumrepresentation(listRepresentation.getSelectedIndex()+1);
       
       // récupération du nombre de personnes
        resa.setNbpersonnes(Integer.parseInt(champNombrePers.getText()));

        // Ajout des éléments de la réservation à la table RESERVATION
        controller.addReservation(resa);
    }//GEN-LAST:event_btValiderMouseClicked

    private void champNombrePersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_champNombrePersFocusLost
        // Récupération de l'index de l'élément sélectionné dans la combobox pour trouver le tarif
        int representationid = (int) listRepresentation.getSelectedIndex() ;
 
        // Récupération du nombre de personnes
        int nbpers = Integer.parseInt(champNombrePers.getText());
        
        // Affichage du montant total dans le champ total de la fenêtre
        champTotal.setText (String.valueOf(controller.getRepresentations().get(representationid).getTarif()*nbpers)) ;
    }//GEN-LAST:event_champNombrePersFocusLost

    private void champNombrePersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champNombrePersActionPerformed
        // Récupération de l'index de l'élément sélectionné dans la combobox pour trouver le tarif
        int representationid = (int) listRepresentation.getSelectedIndex() ;
 
        // Récupération du nombre de personnes
        int nbpers = Integer.parseInt(champNombrePers.getText());
        
        // Affichage du montant total dans le champ total de la fenêtre
        champTotal.setText (String.valueOf(controller.getRepresentations().get(representationid).getTarif()*nbpers)) ;
    }//GEN-LAST:event_champNombrePersActionPerformed

    private void btAnnulerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAnnulerMouseClicked
      System.exit(0);
    }//GEN-LAST:event_btAnnulerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IHMReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IHMReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IHMReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IHMReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IHMReservations().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnnuler;
    private javax.swing.JButton btValider;
    private javax.swing.JTextField champNombrePers;
    private javax.swing.JTextField champTotal;
    private javax.swing.JLabel lAdherent;
    private javax.swing.JLabel lNombrepersonnes;
    private javax.swing.JLabel lRepresentation;
    private javax.swing.JLabel lTotal;
    private javax.swing.JComboBox<String> listAdherent;
    private javax.swing.JComboBox<String> listRepresentation;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
